// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentalSystem.Models;

#nullable disable

namespace RentalSystem.Migrations
{
    [DbContext(typeof(RentalSystemDBConText))]
    [Migration("20240527160719_UDseeder27PM")]
    partial class UDseeder27PM
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RentalSystem.Models.AppAddress", b =>
                {
                    b.Property<int>("IdAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAddress"));

                    b.Property<string>("ApartmentNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FullAdress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Wards")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdAddress");

                    b.ToTable("AppAddress");
                });

            modelBuilder.Entity("RentalSystem.Models.AppCategory", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategory"));

                    b.Property<string>("Advantage")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AutomaticBrowsing")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisplayNumberPhone")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Object")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("TitleColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdCategory");

                    b.ToTable("AppCategory");
                });

            modelBuilder.Entity("RentalSystem.Models.AppCategoryNews", b =>
                {
                    b.Property<int>("IdCateNews")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCateNews"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdCateNews");

                    b.ToTable("AppCategoryNews");
                });

            modelBuilder.Entity("RentalSystem.Models.AppContactFeedback", b =>
                {
                    b.Property<int>("IdContactFback")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContactFback"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdContact")
                        .HasColumnType("int");

                    b.Property<int?>("IdRequest")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdContactFback");

                    b.HasIndex("IdContact")
                        .IsUnique()
                        .HasFilter("[IdContact] IS NOT NULL");

                    b.HasIndex("IdRequest")
                        .IsUnique()
                        .HasFilter("[IdRequest] IS NOT NULL");

                    b.HasIndex("IdUser");

                    b.ToTable("AppContactFeedback");
                });

            modelBuilder.Entity("RentalSystem.Models.AppContacts", b =>
                {
                    b.Property<int>("IdContact")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContact"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("IdContact");

                    b.ToTable("AppContact");
                });

            modelBuilder.Entity("RentalSystem.Models.AppHistoryPayments", b =>
                {
                    b.Property<int>("IdHistoryPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistoryPayment"));

                    b.Property<double>("AccountBalance")
                        .HasColumnType("float");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<int>("IdPost")
                        .HasColumnType("int");

                    b.Property<string>("MaPost")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IdHistoryPayment");

                    b.HasIndex("IdPost")
                        .IsUnique();

                    b.ToTable("AppHistoryPayment");
                });

            modelBuilder.Entity("RentalSystem.Models.AppImgPosts", b =>
                {
                    b.Property<int>("IdImgPost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImgPost"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPost")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdImgPost");

                    b.HasIndex("IdPost");

                    b.ToTable("AppImgPost");
                });

            modelBuilder.Entity("RentalSystem.Models.AppNews", b =>
                {
                    b.Property<int>("IdNews")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNews"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImg")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCateNews")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdNews");

                    b.HasIndex("IdCateNews");

                    b.HasIndex("IdUser");

                    b.ToTable("AppNews");
                });

            modelBuilder.Entity("RentalSystem.Models.AppPermissions", b =>
                {
                    b.Property<int>("IdPermission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermission"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPermission");

                    b.ToTable("AppPermission");

                    b.HasData(
                        new
                        {
                            IdPermission = 1602,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Thêm quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            IdPermission = 1601,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            IdPermission = 1603,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            IdPermission = 1604,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa quyền",
                            GroupName = "Quản lý phân quyền",
                            Table = "AppRole"
                        },
                        new
                        {
                            IdPermission = 1102,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Thêm",
                            GroupName = "Quản lý Dịch vụ",
                            Table = "AppCategory"
                        },
                        new
                        {
                            IdPermission = 1105,
                            Code = "VIEW_DETAIL",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem chi tiết",
                            GroupName = "Quản lý Dịch vụ",
                            Table = "AppCategory"
                        },
                        new
                        {
                            IdPermission = 1101,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách",
                            GroupName = "Quản lý Dịch vụ",
                            Table = "AppCategory"
                        },
                        new
                        {
                            IdPermission = 1103,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật",
                            GroupName = "Quản lý Dịch vụ",
                            Table = "AppCategory"
                        },
                        new
                        {
                            IdPermission = 1104,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa",
                            GroupName = "Quản lý Dịch vụ",
                            Table = "AppCategory"
                        },
                        new
                        {
                            IdPermission = 1201,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách",
                            GroupName = "Quản lý Liên hệ",
                            Table = "AppContact"
                        },
                        new
                        {
                            IdPermission = 1202,
                            Code = "VIEW_DETAIL",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem chi tiết",
                            GroupName = "Quản lý Liên hệ",
                            Table = "AppContact"
                        },
                        new
                        {
                            IdPermission = 1203,
                            Code = "FEEDBACK",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Phản hồi",
                            GroupName = "Quản lý Liên hệ",
                            Table = "AppContact"
                        },
                        new
                        {
                            IdPermission = 1204,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa",
                            GroupName = "Quản lý Liên hệ",
                            Table = "AppContact"
                        },
                        new
                        {
                            IdPermission = 1501,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách",
                            GroupName = "Quản lý Đăng bài",
                            Table = "AppPost"
                        },
                        new
                        {
                            IdPermission = 1506,
                            Code = "VIEW_DETAIL",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem chi tiết",
                            GroupName = "Quản lý Đăng bài",
                            Table = "AppPost"
                        },
                        new
                        {
                            IdPermission = 1502,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Thêm mới",
                            GroupName = "Quản lý Đăng bài",
                            Table = "AppPost"
                        },
                        new
                        {
                            IdPermission = 1503,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật",
                            GroupName = "Quản lý Đăng bài",
                            Table = "AppPost"
                        },
                        new
                        {
                            IdPermission = 1504,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa bài viết",
                            GroupName = "Quản lý Đăng bài",
                            Table = "AppPost"
                        },
                        new
                        {
                            IdPermission = 1505,
                            Code = "PUBLIC",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Thay đổi hiển thị",
                            GroupName = "Quản lý Đăng bài",
                            Table = "AppPost"
                        },
                        new
                        {
                            IdPermission = 1507,
                            Code = "REVIEW",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Duyệt bài",
                            GroupName = "Quản lý Đăng bài",
                            Table = "AppPost"
                        },
                        new
                        {
                            IdPermission = 1701,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách",
                            GroupName = "Quản lý Danh mục thuê",
                            Table = "AppTypeOfService"
                        },
                        new
                        {
                            IdPermission = 1702,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Tạo mới",
                            GroupName = "Quản lý Danh mục thuê",
                            Table = "AppTypeOfService"
                        },
                        new
                        {
                            IdPermission = 1703,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật",
                            GroupName = "Quản lý Danh mục thuê",
                            Table = "AppTypeOfService"
                        },
                        new
                        {
                            IdPermission = 1704,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa",
                            GroupName = "Quản lý Danh mục thuê",
                            Table = "AppTypeOfService"
                        },
                        new
                        {
                            IdPermission = 1801,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            IdPermission = 1802,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Tạo mới tài khoản",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            IdPermission = 1803,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật  tài khoản",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            IdPermission = 1806,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa  tài khoản",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            IdPermission = 1805,
                            Code = "IsCHANGEBLOCK",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Thay đổi Block",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            IdPermission = 1804,
                            Code = "UPDATE_PWD",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật Mật khẩu",
                            GroupName = "Quản lý người dùng",
                            Table = "AppUser"
                        },
                        new
                        {
                            IdPermission = 1901,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách Chính sách",
                            GroupName = "Quản lý Chính sách",
                            Table = "AppPolicy"
                        },
                        new
                        {
                            IdPermission = 1902,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Tạo mới Chính sách",
                            GroupName = "Quản lý Chính sách",
                            Table = "AppPolicy"
                        },
                        new
                        {
                            IdPermission = 1903,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật Chính sách",
                            GroupName = "Quản lý Chính sách",
                            Table = "AppPolicy"
                        },
                        new
                        {
                            IdPermission = 1904,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa Chính sách",
                            GroupName = "Quản lý Chính sách",
                            Table = "AppPolicy"
                        },
                        new
                        {
                            IdPermission = 1905,
                            Code = "DETAIL",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem chi tiết",
                            GroupName = "Quản lý Chính sách",
                            Table = "AppPolicy"
                        },
                        new
                        {
                            IdPermission = 1401,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách",
                            GroupName = "Quản lý loại tin tức",
                            Table = "AppCateNews"
                        },
                        new
                        {
                            IdPermission = 1402,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Thêm mới",
                            GroupName = "Quản lý loại tin tức",
                            Table = "AppCateNews"
                        },
                        new
                        {
                            IdPermission = 1403,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật",
                            GroupName = "Quản lý loại tin tức",
                            Table = "AppCateNews"
                        },
                        new
                        {
                            IdPermission = 1404,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa danh mục",
                            GroupName = "Quản lý loại tin tức",
                            Table = "AppCateNews"
                        },
                        new
                        {
                            IdPermission = 1405,
                            Code = "DELETE_LIST",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa nhiều tin",
                            GroupName = "Quản lý loại tin tức",
                            Table = "AppCateNews"
                        },
                        new
                        {
                            IdPermission = 2101,
                            Code = "VIEW_LIST",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem danh sách",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            IdPermission = 2102,
                            Code = "CREATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Thêm mới",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            IdPermission = 2103,
                            Code = "UPDATE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Cập nhật",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            IdPermission = 2104,
                            Code = "DELETE",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa bài viết",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            IdPermission = 2105,
                            Code = "DELETE_LIST",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xóa nhiều tin",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        },
                        new
                        {
                            IdPermission = 2106,
                            Code = "VIEW_DETAIL",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Xem chi tiết",
                            GroupName = "Quản lý tin tức",
                            Table = "AppNews"
                        });
                });

            modelBuilder.Entity("RentalSystem.Models.AppPolicy", b =>
                {
                    b.Property<int>("IdPolicy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPolicy"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPolicy");

                    b.HasIndex("IdUser");

                    b.ToTable("AppPolicy");
                });

            modelBuilder.Entity("RentalSystem.Models.AppPosts", b =>
                {
                    b.Property<int>("IdPost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPost"));

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Haslable")
                        .HasColumnType("bit");

                    b.Property<int?>("IdAddress")
                        .HasColumnType("int");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdRentalObject")
                        .HasColumnType("int");

                    b.Property<int>("IdTypeOfService")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("MaPost")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PostStatus")
                        .HasColumnType("int");

                    b.Property<double>("RtalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ToTforRtalPrice")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ToTforTotalPostTime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("TotalMoney")
                        .HasColumnType("float");

                    b.Property<double>("TotalPostTime")
                        .HasColumnType("float");

                    b.HasKey("IdPost");

                    b.HasIndex("IdAddress")
                        .IsUnique()
                        .HasFilter("[IdAddress] IS NOT NULL");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdRentalObject");

                    b.HasIndex("IdTypeOfService");

                    b.HasIndex("IdUser");

                    b.ToTable("AppPost");
                });

            modelBuilder.Entity("RentalSystem.Models.AppRentalObjects", b =>
                {
                    b.Property<int>("IdRentalObject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRentalObject"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRentalObject");

                    b.ToTable("AppRentalObject");

                    b.HasData(
                        new
                        {
                            IdRentalObject = 1,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hộ gia đình"
                        },
                        new
                        {
                            IdRentalObject = 2,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nhân viên công sở"
                        },
                        new
                        {
                            IdRentalObject = 3,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Học sinh - Sinh viên"
                        },
                        new
                        {
                            IdRentalObject = 4,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Doanh nghiệp"
                        },
                        new
                        {
                            IdRentalObject = 5,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tùy chọn khác"
                        });
                });

            modelBuilder.Entity("RentalSystem.Models.AppRequest", b =>
                {
                    b.Property<int>("IdRequest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRequest"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPost")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("IdRequest");

                    b.HasIndex("IdPost");

                    b.HasIndex("IdUser");

                    b.ToTable("AppRequest");
                });

            modelBuilder.Entity("RentalSystem.Models.AppRolePermission", b =>
                {
                    b.Property<int>("IdRolePermission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRolePermission"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPermission")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.HasKey("IdRolePermission");

                    b.HasIndex("IdPermission");

                    b.HasIndex("IdRole");

                    b.ToTable("AppRolePermission");
                });

            modelBuilder.Entity("RentalSystem.Models.AppRoles", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdRole");

                    b.ToTable("AppRole");

                    b.HasData(
                        new
                        {
                            IdRole = 1,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Khách hàng",
                            Name = "Khách hàng"
                        },
                        new
                        {
                            IdRole = 2,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Quản trị toàn bộ hệ thống",
                            Name = "Quản trị hệ thống"
                        });
                });

            modelBuilder.Entity("RentalSystem.Models.AppTimes", b =>
                {
                    b.Property<int>("IdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTime"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.HasKey("IdTime");

                    b.ToTable("AppTimes");

                    b.HasData(
                        new
                        {
                            IdTime = 1,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Giờ",
                            Time = 0
                        },
                        new
                        {
                            IdTime = 2,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ngày",
                            Time = 1
                        },
                        new
                        {
                            IdTime = 3,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tháng",
                            Time = 30
                        },
                        new
                        {
                            IdTime = 4,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Năm",
                            Time = 365
                        });
                });

            modelBuilder.Entity("RentalSystem.Models.AppTypeOfService", b =>
                {
                    b.Property<int>("IdTypeOfService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypeOfService"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTypeOfService");

                    b.ToTable("AppTypeOfService");
                });

            modelBuilder.Entity("RentalSystem.Models.AppUsers", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<double>("AccountBalance")
                        .HasColumnType("float");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<string>("LinkFB")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumberZL")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdRole");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            IdUser = 1,
                            AccountBalance = 0.0,
                            Address = "Thành phố Cần thơ",
                            Avatar = "/Image/AvatarDefault.png",
                            Code = "US2405271",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quocduyctvn@gmail.com",
                            IdRole = 2,
                            IsBlock = false,
                            LinkFB = "https://www.facebook.com/profile.php?id=100066548050837&mibextid=ZbWKwL",
                            Name = "admin",
                            Password = "$2a$10$iRwHLr5IZBPO0Dhq1ymSiuEd8Tnj313kWLaFEuP7USAQSuoxerMCa",
                            PhoneNumberZL = "0901007221"
                        },
                        new
                        {
                            IdUser = 2,
                            AccountBalance = 0.0,
                            Address = "Thành phố Cần thơ",
                            Avatar = "/Image/AvatarDefault.png",
                            Code = "US2405272",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin_test@gmail.com",
                            IdRole = 2,
                            IsBlock = false,
                            LinkFB = "",
                            Name = "admin02",
                            Password = "$2a$10$iRwHLr5IZBPO0Dhq1ymSiuEd8Tnj313kWLaFEuP7USAQSuoxerMCa",
                            PhoneNumberZL = "0945255664"
                        });
                });

            modelBuilder.Entity("RentalSystem.Models.AppContactFeedback", b =>
                {
                    b.HasOne("RentalSystem.Models.AppContacts", "appContacts")
                        .WithOne("appContactFeedback")
                        .HasForeignKey("RentalSystem.Models.AppContactFeedback", "IdContact");

                    b.HasOne("RentalSystem.Models.AppRequest", "appRequest")
                        .WithOne("appContactFeedback")
                        .HasForeignKey("RentalSystem.Models.AppContactFeedback", "IdRequest")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RentalSystem.Models.AppUsers", "appUsers")
                        .WithMany("appContactFeedback")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appContacts");

                    b.Navigation("appRequest");

                    b.Navigation("appUsers");
                });

            modelBuilder.Entity("RentalSystem.Models.AppHistoryPayments", b =>
                {
                    b.HasOne("RentalSystem.Models.AppPosts", "appPosts")
                        .WithOne("appHistoryPayments")
                        .HasForeignKey("RentalSystem.Models.AppHistoryPayments", "IdPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appPosts");
                });

            modelBuilder.Entity("RentalSystem.Models.AppImgPosts", b =>
                {
                    b.HasOne("RentalSystem.Models.AppPosts", "appPost")
                        .WithMany("appImgPosts")
                        .HasForeignKey("IdPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appPost");
                });

            modelBuilder.Entity("RentalSystem.Models.AppNews", b =>
                {
                    b.HasOne("RentalSystem.Models.AppCategoryNews", "appCategoryNews")
                        .WithMany("appNews")
                        .HasForeignKey("IdCateNews")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalSystem.Models.AppUsers", "appUser")
                        .WithMany("appNews")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appCategoryNews");

                    b.Navigation("appUser");
                });

            modelBuilder.Entity("RentalSystem.Models.AppPolicy", b =>
                {
                    b.HasOne("RentalSystem.Models.AppUsers", "appUsers")
                        .WithMany("appPolicy")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appUsers");
                });

            modelBuilder.Entity("RentalSystem.Models.AppPosts", b =>
                {
                    b.HasOne("RentalSystem.Models.AppAddress", "appAddress")
                        .WithOne("appPosts")
                        .HasForeignKey("RentalSystem.Models.AppPosts", "IdAddress");

                    b.HasOne("RentalSystem.Models.AppCategory", "appCategory")
                        .WithMany("appPosts")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalSystem.Models.AppRentalObjects", "appRentalObject")
                        .WithMany("appPosts")
                        .HasForeignKey("IdRentalObject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalSystem.Models.AppTypeOfService", "appTypeOfService")
                        .WithMany("appPosts")
                        .HasForeignKey("IdTypeOfService")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RentalSystem.Models.AppUsers", "appUsers")
                        .WithMany("appPosts")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appAddress");

                    b.Navigation("appCategory");

                    b.Navigation("appRentalObject");

                    b.Navigation("appTypeOfService");

                    b.Navigation("appUsers");
                });

            modelBuilder.Entity("RentalSystem.Models.AppRequest", b =>
                {
                    b.HasOne("RentalSystem.Models.AppPosts", "appPosts")
                        .WithMany("appRequest")
                        .HasForeignKey("IdPost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalSystem.Models.AppUsers", "appUsers")
                        .WithMany("appRequest")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("appPosts");

                    b.Navigation("appUsers");
                });

            modelBuilder.Entity("RentalSystem.Models.AppRolePermission", b =>
                {
                    b.HasOne("RentalSystem.Models.AppPermissions", "appPermission")
                        .WithMany("appRolePermissions")
                        .HasForeignKey("IdPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentalSystem.Models.AppRoles", "appRole")
                        .WithMany("appRolePermissions")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appPermission");

                    b.Navigation("appRole");
                });

            modelBuilder.Entity("RentalSystem.Models.AppUsers", b =>
                {
                    b.HasOne("RentalSystem.Models.AppRoles", "appRole")
                        .WithMany("appUsers")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appRole");
                });

            modelBuilder.Entity("RentalSystem.Models.AppAddress", b =>
                {
                    b.Navigation("appPosts")
                        .IsRequired();
                });

            modelBuilder.Entity("RentalSystem.Models.AppCategory", b =>
                {
                    b.Navigation("appPosts");
                });

            modelBuilder.Entity("RentalSystem.Models.AppCategoryNews", b =>
                {
                    b.Navigation("appNews");
                });

            modelBuilder.Entity("RentalSystem.Models.AppContacts", b =>
                {
                    b.Navigation("appContactFeedback");
                });

            modelBuilder.Entity("RentalSystem.Models.AppPermissions", b =>
                {
                    b.Navigation("appRolePermissions");
                });

            modelBuilder.Entity("RentalSystem.Models.AppPosts", b =>
                {
                    b.Navigation("appHistoryPayments")
                        .IsRequired();

                    b.Navigation("appImgPosts");

                    b.Navigation("appRequest");
                });

            modelBuilder.Entity("RentalSystem.Models.AppRentalObjects", b =>
                {
                    b.Navigation("appPosts");
                });

            modelBuilder.Entity("RentalSystem.Models.AppRequest", b =>
                {
                    b.Navigation("appContactFeedback")
                        .IsRequired();
                });

            modelBuilder.Entity("RentalSystem.Models.AppRoles", b =>
                {
                    b.Navigation("appRolePermissions");

                    b.Navigation("appUsers");
                });

            modelBuilder.Entity("RentalSystem.Models.AppTypeOfService", b =>
                {
                    b.Navigation("appPosts");
                });

            modelBuilder.Entity("RentalSystem.Models.AppUsers", b =>
                {
                    b.Navigation("appContactFeedback");

                    b.Navigation("appNews");

                    b.Navigation("appPolicy");

                    b.Navigation("appPosts");

                    b.Navigation("appRequest");
                });
#pragma warning restore 612, 618
        }
    }
}
